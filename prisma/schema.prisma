// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid()) @db.Uuid
  email     String @unique
  firstName String
  lastName  String
  birthdate DateTime
  password  String
  role      Role   @default(CUSTOMER)

  ownedBarberShop BarberShop? @relation(name: "owner")
  wallet  Wallet? @relation(name: "customer_wallet")

  workingBarberShop   BarberShop? @relation(name: "barbers", fields: [workingbarberShopId], references: [id])
  workingbarberShopId String?     @db.Uuid

  customerAppointments Appointment[] @relation(name: "customer")
  barberAppointments Appointment[] @relation(name: "barber")
}

enum Role {
  CUSTOMER
  BARBER
  SHOP_OWNER
  ADMIN
}

model BarberShop {
  id          String        @id @default(uuid()) @db.Uuid
  name        String
  owner       User          @relation(name: "owner", fields: [ownerId], references: [id])
  ownerId     String        @unique @db.Uuid
  barbers     User[]        @relation(name: "barbers")
  Appointment Appointment[]
  reports   Report[]        @relation(name: "reports")
  createdAt   DateTime      @default(now())
}

model Appointment {
  id          String   @id @default(uuid()) @db.Uuid
  startDate DateTime
  endDate DateTime

  customer   User   @relation(name: "customer", fields: [customerId], references: [id])
  customerId String @db.Uuid

  barber   User   @relation(name: "barber", fields: [barberId], references: [id])
  barberId String @db.Uuid

  barberShop   BarberShop @relation(fields: [barberShopId], references: [id])
  barberShopId String     @db.Uuid

  createdAt DateTime @default(now())
}

model Report {
  id          String   @id @default(uuid()) @db.Uuid
  from  DateTime
  to    DateTime
  totalReports Int @default(0)
  barberShop   BarberShop @relation(name: "reports",fields: [barberShopId], references: [id])
  barberShopId String     @db.Uuid
}

model Wallet {
  id          String   @id @default(uuid()) @db.Uuid
  customer   User   @relation(name: "customer_wallet", fields: [customerId], references: [id])
  customerId String @db.Uuid @unique
  value     Float @default(0)
}
